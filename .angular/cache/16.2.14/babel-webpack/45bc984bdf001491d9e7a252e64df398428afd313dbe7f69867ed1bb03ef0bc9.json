{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass FoodService {\n  constructor() {}\n  getAllFoodByTag(tag) {\n    if (tag == 'All') return this.getAll();else return this.getAll().filter(food => food.tags?.includes(tag));\n    // return tags == 'All'? this.getAll() : this.getAll().filter(food => food.tags?.includes(tags));\n  }\n  static #_ = this.ɵfac = function FoodService_Factory(t) {\n    return new (t || FoodService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FoodService,\n    factory: FoodService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { FoodService };\n() => {\n  return [{\n    id: 1,\n    price: 10.99,\n    name: 'Pizza',\n    favourite: false,\n    star: 4.5,\n    tags: ['Pizza', 'Italian', 'Cheese'],\n    imageUrl: '/assets/Food-1.jpg',\n    cookTime: '15 - 20',\n    origins: ['Italian']\n  }, {\n    id: 2,\n    price: 10.99,\n    name: 'Manchurian',\n    favourite: true,\n    star: 4.5,\n    tags: ['Manchurian', 'Chinese'],\n    imageUrl: '/assets/Food-2.jpg',\n    cookTime: '10-15',\n    origins: ['Chinese']\n  }, {\n    id: 3,\n    price: 10.99,\n    name: 'Burger',\n    favourite: false,\n    star: 4.5,\n    tags: ['Burger', 'USA', 'Patty'],\n    imageUrl: '/assets/Food-3.jpeg',\n    cookTime: '15 - 20',\n    origins: ['The Unites States of America']\n  }, {\n    id: 4,\n    price: 10.99,\n    name: 'French Fries',\n    favourite: false,\n    star: 4.5,\n    tags: ['Fries', 'Belgian', 'Fingers'],\n    imageUrl: '/assets/Food-4.jpg',\n    cookTime: '15 - 20',\n    origins: ['Belgium']\n  }, {\n    id: 5,\n    price: 10.99,\n    name: 'Pizza',\n    favourite: true,\n    star: 4.5,\n    tags: ['Pizza', 'Italian', 'Cheese'],\n    imageUrl: '/assets/Food-5.jpg',\n    cookTime: '15 - 20',\n    origins: ['Italian']\n  }, {\n    id: 6,\n    price: 10.99,\n    name: 'Pizza',\n    favourite: false,\n    star: 4.5,\n    tags: ['Pizza', 'Italian', 'Cheese'],\n    imageUrl: '/assets/Food-6.jpg',\n    cookTime: '15 - 20',\n    origins: ['Italian']\n  }, {\n    id: 7,\n    price: 10.99,\n    name: 'Burger',\n    favourite: false,\n    star: 4.5,\n    tags: ['Burger', 'American', 'Patty'],\n    imageUrl: '/assets/Food-7.jpg',\n    cookTime: '15 - 20',\n    origins: ['USA']\n  }, {\n    id: 8,\n    price: 10.99,\n    name: 'Noodles',\n    favourite: false,\n    star: 4.5,\n    tags: ['Noodles', 'Chinese', 'Chowmein'],\n    imageUrl: '/assets/Food-8.jpg',\n    cookTime: '15 - 20',\n    origins: ['China']\n  }];\n};","map":{"version":3,"names":["FoodService","constructor","getAllFoodByTag","tag","getAll","filter","food","tags","includes","_","_2","factory","ɵfac","providedIn","id","price","name","favourite","star","imageUrl","cookTime","origins"],"sources":["C:\\Users\\Yatharth M\\Languages\\project\\zomato\\src\\app\\services\\food\\food.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Foods } from 'src/app/shared/models/food';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FoodService {\n\n  constructor() { }\n\n  getAllFoodByTag(tag:string) : Foods[]\n  {\n    if(tag == 'All')  \n        return this.getAll()\n    else  \n        return this.getAll().filter(food => food.tags?.includes(tag));\n\n    // return tags == 'All'? this.getAll() : this.getAll().filter(food => food.tags?.includes(tags));\n  }\n\n  getAllTag():\n\n  getAll():Foods[]{\n    return[\n      {\n        id: 1,\n        price: 10.99,\n        name: 'Pizza',\n        favourite: false,\n        star: 4.5,\n        tags: ['Pizza', 'Italian', 'Cheese'],\n        imageUrl: '/assets/Food-1.jpg',\n        cookTime: '15 - 20',\n        origins: ['Italian'],\n      },\n      {\n        id: 2,\n        price: 10.99,\n        name: 'Manchurian',\n        favourite: true,\n        star: 4.5,\n        tags: ['Manchurian', 'Chinese'],\n        imageUrl: '/assets/Food-2.jpg',\n        cookTime: '10-15',\n        origins: ['Chinese'],\n      },\n      {\n        id: 3,\n        price: 10.99,\n        name: 'Burger',\n        favourite: false,\n        star: 4.5,\n        tags: ['Burger', 'USA', 'Patty'],\n        imageUrl: '/assets/Food-3.jpeg',\n        cookTime: '15 - 20',\n        origins: ['The Unites States of America'],\n      },\n      {\n        id: 4,\n        price: 10.99,\n        name: 'French Fries',\n        favourite: false,\n        star: 4.5,\n        tags: ['Fries', 'Belgian', 'Fingers'],\n        imageUrl: '/assets/Food-4.jpg',\n        cookTime: '15 - 20',\n        origins: ['Belgium'],\n      },\n      {\n        id: 5,\n        price: 10.99,\n        name: 'Pizza',\n        favourite: true,\n        star: 4.5,\n        tags: ['Pizza', 'Italian', 'Cheese'],\n        imageUrl: '/assets/Food-5.jpg',\n        cookTime: '15 - 20',\n        origins: ['Italian'],\n      },\n      {\n        id: 6,\n        price: 10.99,\n        name: 'Pizza',\n        favourite: false,\n        star: 4.5,\n        tags: ['Pizza', 'Italian', 'Cheese'],\n        imageUrl: '/assets/Food-6.jpg',\n        cookTime: '15 - 20',\n        origins: ['Italian'],\n      },\n      {\n        id: 7,\n        price: 10.99,\n        name: 'Burger',\n        favourite: false,\n        star: 4.5,\n        tags: ['Burger', 'American', 'Patty'],\n        imageUrl: '/assets/Food-7.jpg',\n        cookTime: '15 - 20',\n        origins: ['USA'],\n      },\n      {\n        id: 8,\n        price: 10.99,\n        name: 'Noodles',\n        favourite: false,\n        star: 4.5,\n        tags: ['Noodles', 'Chinese', 'Chowmein'],\n        imageUrl: '/assets/Food-8.jpg',\n        cookTime: '15 - 20',\n        origins: ['China'],\n      },\n    ]\n  }\n}\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}