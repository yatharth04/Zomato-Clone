{"ast":null,"code":"import { Cart } from '../shared/models/Cart';\nimport { CartItem } from '../shared/models/cartItem';\nimport * as i0 from \"@angular/core\";\nclass CartService {\n  constructor() {\n    this.cart = new Cart();\n  }\n  addToCart(food) {\n    let cartItem = this.cart.items.find(item => item.food.id === food.id);\n    if (cartItem) {\n      this.changeQuantity(food.id, cartItem.quantity + 1);\n      return;\n    }\n    this.cart.items.push(new CartItem(food));\n  }\n  removeFromCart(foodId) {\n    this.cart.items = this.cart.items.filter(item => item.food.id != foodId);\n  }\n  changeQuantity(quantity, foodId) {\n    let cartItem = this.cart.items.find(item => item.food.id === foodId);\n    if (!cartItem) return;\n    cartItem.quantity = quantity;\n  }\n  getCart() {\n    return this.cart;\n  }\n  static #_ = this.ɵfac = function CartService_Factory(t) {\n    return new (t || CartService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CartService,\n    factory: CartService.ɵfac,\n    providedIn: 'root'\n  });\n}\nexport { CartService };","map":{"version":3,"names":["Cart","CartItem","CartService","constructor","cart","addToCart","food","cartItem","items","find","item","id","changeQuantity","quantity","push","removeFromCart","foodId","filter","getCart","_","_2","factory","ɵfac","providedIn"],"sources":["C:\\Users\\Yatharth M\\Languages\\project\\zomato\\src\\app\\services\\cart.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { Cart } from '../shared/models/Cart';\nimport { Foods } from '../shared/models/food';\nimport { CartItem } from '../shared/models/cartItem';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CartService {\n\n  private cart:Cart = new Cart();\n\n  addToCart(food:Foods) :void\n  {\n    let cartItem = this.cart.items.find(item => item.food.id === food.id)\n    if(cartItem)\n      {\n        this.changeQuantity(food.id , cartItem.quantity + 1)\n        return;\n      }\n      this.cart.items.push(new CartItem(food));\n  }\n\n  removeFromCart(foodId:number):void\n  {\n    this.cart.items = this.cart.items.filter(item => item.food.id != foodId)\n  }\n\n  changeQuantity(quantity:number, foodId:number)\n  {\n    let cartItem = this.cart.items.find(item => item.food.id === foodId)\n    if(!cartItem) return;\n    cartItem.quantity = quantity;\n  }\n\n  getCart():Cart\n  {\n    return this.cart;\n  }\n}\n"],"mappings":"AACA,SAASA,IAAI,QAAQ,uBAAuB;AAE5C,SAASC,QAAQ,QAAQ,2BAA2B;;AAEpD,MAGaC,WAAW;EAHxBC,YAAA;IAKU,KAAAC,IAAI,GAAQ,IAAIJ,IAAI,EAAE;;EAE9BK,SAASA,CAACC,IAAU;IAElB,IAAIC,QAAQ,GAAG,IAAI,CAACH,IAAI,CAACI,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAACK,EAAE,KAAKL,IAAI,CAACK,EAAE,CAAC;IACrE,IAAGJ,QAAQ,EACT;MACE,IAAI,CAACK,cAAc,CAACN,IAAI,CAACK,EAAE,EAAGJ,QAAQ,CAACM,QAAQ,GAAG,CAAC,CAAC;MACpD;;IAEF,IAAI,CAACT,IAAI,CAACI,KAAK,CAACM,IAAI,CAAC,IAAIb,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC5C;EAEAS,cAAcA,CAACC,MAAa;IAE1B,IAAI,CAACZ,IAAI,CAACI,KAAK,GAAG,IAAI,CAACJ,IAAI,CAACI,KAAK,CAACS,MAAM,CAACP,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAACK,EAAE,IAAIK,MAAM,CAAC;EAC1E;EAEAJ,cAAcA,CAACC,QAAe,EAAEG,MAAa;IAE3C,IAAIT,QAAQ,GAAG,IAAI,CAACH,IAAI,CAACI,KAAK,CAACC,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACJ,IAAI,CAACK,EAAE,KAAKK,MAAM,CAAC;IACpE,IAAG,CAACT,QAAQ,EAAE;IACdA,QAAQ,CAACM,QAAQ,GAAGA,QAAQ;EAC9B;EAEAK,OAAOA,CAAA;IAEL,OAAO,IAAI,CAACd,IAAI;EAClB;EAAC,QAAAe,CAAA,G;qBA9BUjB,WAAW;EAAA;EAAA,QAAAkB,EAAA,G;WAAXlB,WAAW;IAAAmB,OAAA,EAAXnB,WAAW,CAAAoB,IAAA;IAAAC,UAAA,EAFV;EAAM;;SAEPrB,WAAW","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}